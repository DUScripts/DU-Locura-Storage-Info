{"events":[],"handlers":[{"code":"template = [[\n-- DU-Locura-Storage-Info screen output\njson = require('dkjson')\nrx,ry = getResolution()\nx,borderSpacing=10,4\nfrom_side = rx*0.05\n\nbackground = createLayer()\nback = createLayer()\nfront = createLayer()\n\nheading=loadFont('Montserrat-Bold',75)\nsmall=loadFont('Play',14)\nsmallBold=loadFont('Play-Bold',18)\nsubtext=loadFont('Play', 8)\nlarge=loadFont('Play', 60)\nkindalarge=loadFont('Play', 100)\nkindasmall=loadFont('Play', 40)\n\nWallPaperIMG = loadImage(']]..WallPaper..[[')\n\ncatName = string.upper('${Material}')\nKLVolume = '${volume}'\nLVolume = '${currentVolume}'\npercent = '${percent}'\niconImage = loadImage('${itemIcn}')\ncounting = '${COUNT}'\ntotalValue = ${COUNT}*'${value}'\n\ncolor = color\n\nJericoBar=]]..tostring(showJericoBar)..[[\n\nKorKL=]]..tostring(showinKL)..[[\n\nUseWall=]]..tostring(UseWallpaper)..[[\n\nshowCount=]]..tostring(showCount)..[[\n\nshowValue=]]..tostring(showValue)..[[\n\nHideGitHub=]]..tostring(HideGitHub)..[[\n\nHideTier=]]..tostring(HideTier)..[[\n\n\nif UseWall then addImage(background,WallPaperIMG,0,0,rx,ry) \n    else setBackgroundColor(]] .. BG_Color .. [[) end\n\nfunction drawDoubleLine(layer,x,y,rx,space)\n    addLine(layer,x,y,rx-x,y)\n    addLine(layer,x,y+space,rx-x,y+space) \nend\n\nsetDefaultStrokeColor(back,Shape_Line,0,0,0,0.5)\nsetDefaultShadow(back,Shape_Line,6,0,0,0,0.5)\nsetDefaultFillColor(front,Shape_BoxRounded,249/255,212/255,123/255,1)\nsetDefaultFillColor(front,Shape_Text,0,0,0,1)\nsetDefaultFillColor(front,Shape_Box,0.075,0.125,0.156,1)\nsetDefaultFillColor(front,Shape_Text,0.710,0.878,0.941,1)\n\nfunction renderHeader(title)\n    local h_factor=12\n    local h=35\n    addLine(back,0,h+12,rx,h+12)\n    addBox(front,0,12,rx,h)\n    addText(front,smallBold,title,44,35)\n    addText(front,small,'Locura Storage Info v]] .. version .. [[',rx-170,35)\nend\n\nif JericoBar == true then \n  if HideTier == false then \n    renderHeader(string.upper('T${itemTier} ${itemName}'))\nelse\n    renderHeader(string.upper('${itemName}'))\n  end \nend\n\nif showValue == true then\n    addImage(back,iconImage,120,80,250,250) \n    setNextTextAlign(back,AlignH_Right,AlignV_Baseline)\n    addText(back,heading,totalValue,870,230)\n    setNextFillColor(back,51/255,60/255,74/255,1)\n    addText(back,kindasmall,'Ä§',870,230)\n    setNextFillColor(back,51/255,60/255,74/255,1)\n    addText(back,kindasmall,'EST VALUE',660,170)\nelseif showCount == true then\n    addImage(back,iconImage,120,80,250,250) \n    setNextTextAlign(back,AlignH_Right,AlignV_Baseline)\n    addText(back,heading,counting,870,230)\n    setNextFillColor(back,51/255,60/255,74/255,1)\n    setNextFillColor(back,51/255,60/255,74/255,1)\n    addText(back,kindasmall,'ITEMS LEFT',660,170)\nelse\n    addImage(back,iconImage,370,80,250,250)\nend\n\naddText(front,heading,catName,50,570)\nsetDefaultStrokeColor(back,Shape_Line,1,1,1,0.5) \nsetDefaultStrokeWidth(back,Shape_Line,0.001) \nsetNextFillColor(front,1,1,1,0.5)\n\nif HideGitHub == true then \n    drawDoubleLine(back,x,380,rx,borderSpacing)\nelse\n    drawDoubleLine(back,x,380,950,borderSpacing)\n    addText(front,subtext,'GITHUB/LOCURADU',945,385)\nend\n\nsetNextFillColor(front,${color},1)\nsetNextTextAlign(front,AlignH_Right,AlignV_Baseline)\n\nif KorKL == true then \n    addText(front,large,KLVolume,935,570)\nelse\n    addText(front,large,LVolume..\"/\"..maxVolume,960,570)\nend\n\nsetNextFillColor(front,51/255,60/255,74/255,1)\n\nif KorKL == true then \n    addText(front,kindasmall,'KL',930,570)\nelse\n    addText(front,kindasmall,'L',955,570)\nend\n\nsetDefaultFillColor(back,Shape_Box,0.075,0.125,0.156,1)\nsetDefaultFillColor(front,Shape_Box,${color},1)\nfunction renderProgressBar(percent)      \n    local w=(rx-2-from_side*2)*('${percent}')/100\n    local x=from_side\n    local y=400\n    local h=75\n    addBox(back,x,y,rx-from_side*2,h)\n    addBox(front,x+1,y+1,w,h-2)\nend\nrenderProgressBar()\n]]","filter":{"args":[],"signature":"onStart()","slotKey":"-5"},"key":"3"},{"code":"-- Set options for storage and screens\nMaterial = \"pair1\" --export: (Default: Storage) Screen 1 title\nitemID = 3204140761 --export: Enter the item 1 ID found at du-lua.dev/#/items\nValue = '1' --export: Value of item 1\nMaterial2 = \"pair2\" --export: (Default: Storage) Screen 2 title\nitemID2 = 3204140760 --export: Enter the item 2 ID found at du-lua.dev/#/items\nValue2 = '1' --export: Value of item 2\nMaterial3 = \"pair3\" --export: (Default: Storage) Screen 3 title\nitemID3 = 3858829819 --export: Enter the item 3 ID found at du-lua.dev/#/items\nValue3 = '1' --export: Value of item 3\nMaterial4 = \"pair4\" --export: (Default: Storage) Screen 4 title\nitemID4 = 2413564665 --export: Enter the item 4 ID found at du-lua.dev/#/items\nValue4 = '1' --export: Value of item 4\nMaterial5 = \"pair5\" --export: (Default: Storage) Screen 5 title\nitemID5 = 1358842892 --export: Enter the item 5 ID found at du-lua.dev/#/items\nValue5 = '1' --export: Value of item 5\n\n-- Basic options for screen looks\nBG_Color = \"15/255,24/255,29/255\" --export: (Default: 15/255,24/255,29/255 (DU/UI))\nUseWallpaper = false --export: Use or not use the wallpaper url below\nWallPaper = \"assets.prod.novaquark.com/130546/b6fc96cb-c570-4554-901f-099711f5383d.jpg\" --export: Wallpapper Image URL\nReverseRGB = true --export: Reverse the RGB colors on the percent bar\n\n-- Lets hide stuff\n--HideUseage = false --export: hides the used volume under the percent bar (COMING SOON)\nHideUnit = false --export: Hides the bottom right widget\nHideTier = false --export: Hides the items tier in the header\nHideGitHub = false --export: Hides GitHub link credit\n\n-- Lets show stuff\nshowCount = false --export: Show how many items in container | Cant be used with showValue\nshowValue = true --export: Show the total value of your item/items based on values from above\nshowJericoBar = true --export: Shows the Header bar (JerichoBar)\nshowinKL = false --export: Show storage volume used in KL or L\n\n-- Backend stuff\nversion = '2.3'","filter":{"args":[],"signature":"onStart()","slotKey":"-4"},"key":"1"},{"code":"-- DU-Locura-Storage-Info\n-- Information / Updates / Downloads: GitHub/LocuraDU \n-- Code: GitHub/LocuraDU & GitHub.com/brendonh & Discord/Arcto Lupus\n-- Design: GitHub/LocuraDU & GitHub.com/Jericho1060\n-- Info: LocuraDU is a mod hub for many games by GitHub/CredenceHamby\n-- Built using the wonderful tools at https://du-lua.dev/\n-- Love With Your Heart, Use Your Head For Everything Else - Captain Disillusion\n\nsystem.print(\"----------------------------------------\")\nsystem.print(\"DU-Locura-Storage-Info version \" .. version)\nsystem.print(\"GitHub/LocuraDU\")\nsystem.print(\"----------------------------------------\")\n\nif HideUnit then unit.hideWidget() end\n\nconfig = {}\nfunction configure(a,b,c,d)\n  if checkSlots(a, b) then\n      config.screen = a\n      config.container = b\n      maxVolume = math.floor(b.getMaxVolume())\n      currentVolume = math.floor(b.getItemsVolume()) \n      system.print('Storage connected to ' .. d)\n      a.activate()\n      return true       \n  end\n\n  if checkSlots(b, a) then\n      config.screen = b  \n      config.container = a\n      maxVolume = math.floor(a.getMaxVolume())\n      currentVolume = math.floor(a.getItemsVolume())\n      system.print('Storage connected ' .. c)     \n      b.activate()\n      return true\n  end\n    system.print('No Container or Hub dectected')\n    --unit.exit()\n  return false\nend\n\nscreens = {}\nfor slot_name, slot in pairs(unit) do\n    if type(slot) == \"table\"\n            and type(slot.export) == \"table\"\n            and slot.getClass\n    then\n        if\n            slot.getClass():lower() == 'screenunit'\n            or slot.getClass():lower() == 'screensignunit'\n        then\n            slot.slotname = slot_name\n            table.insert(screens,slot)\n        end\n    end\nend\n\nif #screens == 0 then\n    system.print(\"No Screen Detected\")\n    unit.exit()\nelse\n    table.sort(screens, function(a,b) return a.slotname < b.slotname end)\n    local plural = \"\"\n    if #screens > 1 then plural = \"s\" end\n    system.print(#screens .. \" Screen\" .. plural .. \" Connected\")\nend\n\nfunction checkSlots(a, b)\n  return (a ~= nil and b ~= nil and\n              string.match(a.getClass(), \"Screen\") and\n              string.match(b.getClass(), \"Container\"))\nend\n\nfunction render(PAIRITEM,PAIRMAT,VAL)\n  local pureName=ores[PAIRMAT]\n  local thingid=system.getItem(PAIRITEM)\n  local currentVolume=currentVolume \n  local volume=math.floor(currentVolume / 1000)\n  local percent=currentVolume / maxVolume * 100\n  local COUNT=math.ceil(currentVolume / thingid.unitVolume)\n  system.print(\"Total Storage Size Is \" ..maxVolume)\n  system.print(\"You Are Using \" ..currentVolume)\n  system.print(\"Thats Exactly \" ..percent.. \" %\")\n  system.print(\"Item ID \" ..PAIRITEM.. \" Loaded\")\n  system.print(\"There are \" ..COUNT.. \" Remaining\")\nlocal color\n    if ReverseRGB == true then \n        if percent > 80 then\n        color = \"177/255,42/255,42/255\"\n        elseif percent > 70 then\n        color = \"255/255,128/255,0/255\"      \n        elseif percent > 60 then\n        color = \"249/255,212/255,123/255\"\n        else\n        color = \"34/255,177/255,76/255\"\n       end\n    else\n    if percent > 80 then\n        color = \"34/255,177/255,76/255\"\n    elseif percent > 70 then\n        color = \"249/255,212/255,123/255\"      \n    elseif percent > 60 then\n        color = \"255/255,128/255,0/255\"\n    else\n        color = \"177/255,42/255,42/255\"\n    end\nend\n  local params = {\n      pureName=pureName,\n      Material=PAIRMAT,\n      volume=volume,\n      percent=percent,\n      color=color,\n      currentVolume=currentVolume,\n      maxVolume=maxVolume,\n      itemIcn = thingid.iconPath,\n      itemName = thingid.displayNameWithSize,\n      itemType = thingid.name,\n      itemTier = thingid.tier,\n      value = VAL,\n      COUNT = COUNT\n  }\n  config.screen.setRenderScript(interp(template, params))\nend\n\nfunction interp(s, tab)\n  return (s:gsub('($%b{})', function(w) return tab[w:sub(3, -2)] or w end))\nend\n\nif configure(slot1,slot2,\"Slot1\",\"Slot2\") then\n  render(itemID,Material,Value)\nend\nif configure(slot3,slot4,\"Slot3\",\"Slot4\") then\n  render(itemID2,Material2,Value2)\nend\nif configure(slot5,slot6,\"Slot5\",\"Slot6\") then\n  render(itemID3,Material3,Value3)\nend\nif configure(slot7,slot8,\"Slot7\",\"Slot8\") then\n  render(itemID4,Material4,Value4)\nend\nif configure(slot9,slot10,\"Slot9\",\"Slot10\") then\n  render(itemID5,Material5,Value5)\nend","filter":{"args":[],"signature":"onStart()","slotKey":"-1"},"key":"0"}],"methods":[],"slots":{"0":{"name":"slot1","type":{"events":[],"methods":[]}},"1":{"name":"slot2","type":{"events":[],"methods":[]}},"2":{"name":"slot3","type":{"events":[],"methods":[]}},"3":{"name":"slot4","type":{"events":[],"methods":[]}},"4":{"name":"slot5","type":{"events":[],"methods":[]}},"5":{"name":"slot6","type":{"events":[],"methods":[]}},"6":{"name":"slot7","type":{"events":[],"methods":[]}},"7":{"name":"slot8","type":{"events":[],"methods":[]}},"8":{"name":"slot9","type":{"events":[],"methods":[]}},"9":{"name":"slot10","type":{"events":[],"methods":[]}},"-5":{"name":"library","type":{"events":[],"methods":[]}},"-4":{"name":"system","type":{"events":[],"methods":[]}},"-3":{"name":"player","type":{"events":[],"methods":[]}},"-2":{"name":"construct","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}}}}
